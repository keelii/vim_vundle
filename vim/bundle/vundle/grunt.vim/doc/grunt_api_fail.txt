*grunt_api_fail.txt*    Grunt api_fail: generated helpfile (grunt v0.3.9)

|grunt-fail-intro|	grunt.fail
|grunt-fail-the-fail-api|	The fail API
|grunt-fail-grunt-warn|	grunt.warn ☃
|grunt-fail-grunt-fatal|	grunt.fatal ☃

grunt.fail	*grunt-fail-intro*

For when something goes horribly wrong.

See the [fail lib source](../lib/grunt/fail.js) for more information.


The fail API	*grunt-fail-the-fail-api*

If something explodes (or is about to explode) inside a helper or task, it can force grunt to abort. See the [exit codes documentation](exit_codes.md) for a list of all built-in grunt exit codes.

Note that any method marked with a ☃ (unicode snowman) is also available directly on the `grunt` object. Just so you know. See the [API main page](api.md) for more usage information.


grunt.warn ☃	*grunt-fail-grunt-warn*

Display a warning and abort grunt immediately. Grunt will continue processing tasks if the `--force` command-line option was specified. The `error` argument can be a string message or an error object.

>
	grunt.warn(error [, errorcode])
<

If `--debug 9` is specified on the command-line and an error object was specified, a stack trace will be logged.

_This method is also available as [grunt.warn](api.md)._


grunt.fatal ☃	*grunt-fail-grunt-fatal*

Display a warning and abort grunt immediately. The `error` argument can be a string message or an error object.

>
	grunt.fail(error [, errorcode])
<

If `--debug 9` is specified on the command-line and an error object was specified, a stack trace will be logged.

_This method is also available as [grunt.fatal](api.md)._



vim:tw=78:ts=8:ft=help:norl:
